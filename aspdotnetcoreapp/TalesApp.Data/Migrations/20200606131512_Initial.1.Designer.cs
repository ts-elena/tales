// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TalesApp.Data;

namespace TalesApp.Data.Migrations
{
    [DbContext(typeof(TalesContext))]
    [Migration("20200606131512_Initial.1")]
    partial class Initial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TalesApp.Domain.Character", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CharacterAvatar")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.HasKey("CharacterId");

                    b.ToTable("Character");

                    b.HasData(
                        new
                        {
                            CharacterId = new Guid("a099544c-150e-4558-b9fd-00df9f391384"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/FannyHatter.jpg",
                            CharacterName = "Fanny"
                        },
                        new
                        {
                            CharacterId = new Guid("136b056d-e165-4b06-993d-a52830470b7a"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/Sophie.jfif",
                            CharacterName = "Sophie"
                        },
                        new
                        {
                            CharacterId = new Guid("41cf6f15-7982-468f-b4b4-67ba9c178953"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/SophiesSister1.jfif",
                            CharacterName = "Sophie's sister"
                        },
                        new
                        {
                            CharacterId = new Guid("451f4b8f-8314-4698-9094-dae4f425b975"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/SophiesSister2.jfif",
                            CharacterName = "Sophie's sister"
                        },
                        new
                        {
                            CharacterId = new Guid("8e36a954-aa7e-4047-85c1-94e5b40f4783"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/LettieHatter.png",
                            CharacterName = "Sophie's sister"
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.DictionaryWord", b =>
                {
                    b.Property<Guid>("DictionaryWordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DictionaryWordText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LineId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LineStoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WordAddedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("DictionaryWordId");

                    b.HasIndex("LineId1", "LineStoryId");

                    b.ToTable("DictionaryWord");
                });

            modelBuilder.Entity("TalesApp.Domain.Line", b =>
                {
                    b.Property<Guid>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LineContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LineId", "StoryId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StoryId");

                    b.ToTable("Line");

                    b.HasData(
                        new
                        {
                            LineId = new Guid("7699725c-00be-4db0-832b-bec10d609f39"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            CharacterId = new Guid("a099544c-150e-4558-b9fd-00df9f391384"),
                            LineContent = "Sophie, we have just closed the shop. You have done enough work, why won't you come out with us this time?"
                        },
                        new
                        {
                            LineId = new Guid("10e74286-03c9-442a-a956-762904804b5d"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            CharacterId = new Guid("136b056d-e165-4b06-993d-a52830470b7a"),
                            LineContent = "No, I would better finish this. Go have some fun."
                        },
                        new
                        {
                            LineId = new Guid("0adffb34-de4a-4dce-ba4e-f8f450ff2507"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            CharacterId = new Guid("41cf6f15-7982-468f-b4b4-67ba9c178953"),
                            LineContent = "Look, it is Howl's castle!"
                        },
                        new
                        {
                            LineId = new Guid("56ad5649-60f9-4958-b802-22d32ed35bea"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            CharacterId = new Guid("451f4b8f-8314-4698-9094-dae4f425b975"),
                            LineContent = "Never seen it so close before!"
                        },
                        new
                        {
                            LineId = new Guid("0d8cb57c-993d-4829-ace6-13c7927d54e7"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            CharacterId = new Guid("41cf6f15-7982-468f-b4b4-67ba9c178953"),
                            LineContent = "Oh, my... I wonder if Howl is in town."
                        },
                        new
                        {
                            LineId = new Guid("6926e033-f24d-4dc9-b465-a8577bddb8d2"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            CharacterId = new Guid("8e36a954-aa7e-4047-85c1-94e5b40f4783"),
                            LineContent = "Oh, it is gone!"
                        },
                        new
                        {
                            LineId = new Guid("67abc004-265c-464f-bed3-f4de2764e446"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            CharacterId = new Guid("41cf6f15-7982-468f-b4b4-67ba9c178953"),
                            LineContent = "No, he is just hiding in the fog from all of those planes."
                        },
                        new
                        {
                            LineId = new Guid("f6d9a365-ccc2-47e2-94eb-89c529548853"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            CharacterId = new Guid("451f4b8f-8314-4698-9094-dae4f425b975"),
                            LineContent = "Remember Martha, from South Heaven? They say Howl tore her heart out."
                        },
                        new
                        {
                            LineId = new Guid("7ec57893-2219-4015-811e-f3c520ba125c"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            CharacterId = new Guid("8e36a954-aa7e-4047-85c1-94e5b40f4783"),
                            LineContent = "Remember Martha, from South Heaven? They say Howl tore her heart out."
                        },
                        new
                        {
                            LineId = new Guid("8e859168-021d-4eb6-9b13-1bf8169dda1e"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            CharacterId = new Guid("451f4b8f-8314-4698-9094-dae4f425b975"),
                            LineContent = "Now I am scared to go out!"
                        },
                        new
                        {
                            LineId = new Guid("3465982c-6d40-4fe2-9824-768bb087fe9f"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            CharacterId = new Guid("41cf6f15-7982-468f-b4b4-67ba9c178953"),
                            LineContent = "Don't worry, he only prays on pretty girls!"
                        },
                        new
                        {
                            LineId = new Guid("6f4486fd-8261-46e0-bb0b-010a7924dcfe"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            CharacterId = new Guid("a099544c-150e-4558-b9fd-00df9f391384"),
                            LineContent = "Come on, girls! Hurry up!"
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.LineNumber", b =>
                {
                    b.Property<Guid>("LineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("LineId", "StoryId");

                    b.ToTable("LineNumber");

                    b.HasData(
                        new
                        {
                            LineId = new Guid("7699725c-00be-4db0-832b-bec10d609f39"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            Number = 1
                        },
                        new
                        {
                            LineId = new Guid("10e74286-03c9-442a-a956-762904804b5d"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            Number = 2
                        },
                        new
                        {
                            LineId = new Guid("0adffb34-de4a-4dce-ba4e-f8f450ff2507"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            Number = 3
                        },
                        new
                        {
                            LineId = new Guid("56ad5649-60f9-4958-b802-22d32ed35bea"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            Number = 4
                        },
                        new
                        {
                            LineId = new Guid("0d8cb57c-993d-4829-ace6-13c7927d54e7"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            Number = 5
                        },
                        new
                        {
                            LineId = new Guid("6926e033-f24d-4dc9-b465-a8577bddb8d2"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            Number = 6
                        },
                        new
                        {
                            LineId = new Guid("67abc004-265c-464f-bed3-f4de2764e446"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            Number = 7
                        },
                        new
                        {
                            LineId = new Guid("f6d9a365-ccc2-47e2-94eb-89c529548853"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            Number = 8
                        },
                        new
                        {
                            LineId = new Guid("7ec57893-2219-4015-811e-f3c520ba125c"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            Number = 9
                        },
                        new
                        {
                            LineId = new Guid("8e859168-021d-4eb6-9b13-1bf8169dda1e"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            Number = 10
                        },
                        new
                        {
                            LineId = new Guid("3465982c-6d40-4fe2-9824-768bb087fe9f"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            Number = 11
                        },
                        new
                        {
                            LineId = new Guid("6f4486fd-8261-46e0-bb0b-010a7924dcfe"),
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            Number = 12
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.Story", b =>
                {
                    b.Property<Guid>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StoryCoverImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StorySetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StoryId");

                    b.HasIndex("StorySetId");

                    b.ToTable("Story");

                    b.HasData(
                        new
                        {
                            StoryId = new Guid("cf72a438-8242-4211-a974-6415571a42c8"),
                            IsActive = false,
                            StoryCoverImage = "/images/StoriesData/MovingCastleOpeningStory/HowlsMovingCastleCover.jfif",
                            StoryName = "Opening Story of Howl's Moving Castle",
                            StorySetId = new Guid("21e6de0a-6d44-4cd8-92ed-ab50d7d2730b")
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.StorySet", b =>
                {
                    b.Property<Guid>("StorySetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorySetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StorySetId");

                    b.ToTable("StorySet");

                    b.HasData(
                        new
                        {
                            StorySetId = new Guid("21e6de0a-6d44-4cd8-92ed-ab50d7d2730b"),
                            StorySetName = "Set One"
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.StorySetNumber", b =>
                {
                    b.Property<Guid>("StorySetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SetNumber")
                        .HasColumnType("int");

                    b.HasKey("StorySetId");

                    b.ToTable("StorySetNumber");

                    b.HasData(
                        new
                        {
                            StorySetId = new Guid("21e6de0a-6d44-4cd8-92ed-ab50d7d2730b"),
                            SetNumber = 1
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.DictionaryWord", b =>
                {
                    b.HasOne("TalesApp.Domain.Line", "Line")
                        .WithMany("DictionaryWords")
                        .HasForeignKey("LineId1", "LineStoryId");
                });

            modelBuilder.Entity("TalesApp.Domain.Line", b =>
                {
                    b.HasOne("TalesApp.Domain.Character", "Character")
                        .WithMany("Lines")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TalesApp.Domain.Story", "Story")
                        .WithMany("Lines")
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.LineNumber", b =>
                {
                    b.HasOne("TalesApp.Domain.Line", "Line")
                        .WithOne("LineNumber")
                        .HasForeignKey("TalesApp.Domain.LineNumber", "LineId", "StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.Story", b =>
                {
                    b.HasOne("TalesApp.Domain.StorySet", "StorySet")
                        .WithMany("Stories")
                        .HasForeignKey("StorySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.StorySetNumber", b =>
                {
                    b.HasOne("TalesApp.Domain.StorySet", "StorySet")
                        .WithOne("StorySetNumber")
                        .HasForeignKey("TalesApp.Domain.StorySetNumber", "StorySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
