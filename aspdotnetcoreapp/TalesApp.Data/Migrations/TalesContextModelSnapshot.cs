// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TalesApp.Data;

namespace TalesApp.Data.Migrations
{
    [DbContext(typeof(TalesContext))]
    partial class TalesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TalesApp.Domain.Character", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CharacterAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacterId");

                    b.ToTable("Character");

                    b.HasData(
                        new
                        {
                            CharacterId = new Guid("f5447d23-7618-4d4a-9e65-0918c776c380"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/FannyHatter.jpg",
                            CharacterName = "Fanny"
                        },
                        new
                        {
                            CharacterId = new Guid("055d8f22-74b9-48a3-93b4-20e3342033ed"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/Sophie.jfif",
                            CharacterName = "Sophie"
                        },
                        new
                        {
                            CharacterId = new Guid("14a9f638-5eff-49d2-8113-9b27bd924c48"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/SophiesSister1.jfif",
                            CharacterName = "Sophie's sister"
                        },
                        new
                        {
                            CharacterId = new Guid("374de42d-a6d4-4480-b912-29c761f8564f"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/SophiesSister2.jfif",
                            CharacterName = "Sophie's sister"
                        },
                        new
                        {
                            CharacterId = new Guid("0e4a9b40-096e-4257-bc7c-81a44ff07237"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/LettieHatter.png",
                            CharacterName = "Sophie's sister"
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.DictionaryWord", b =>
                {
                    b.Property<Guid>("DictionaryWordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DictionaryWordText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WordAddedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("DictionaryWordId");

                    b.HasIndex("LineId");

                    b.ToTable("DictionaryWord");
                });

            modelBuilder.Entity("TalesApp.Domain.Line", b =>
                {
                    b.Property<Guid>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LineContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LineId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StoryId");

                    b.ToTable("Line");

                    b.HasData(
                        new
                        {
                            LineId = new Guid("27c253d0-05d0-4daf-9273-55e80f151aa0"),
                            CharacterId = new Guid("f5447d23-7618-4d4a-9e65-0918c776c380"),
                            LineContent = "Sophie, we have just closed the shop. You have done enough work, why won't you come out with us this time?",
                            StoryId = new Guid("23a5d12c-3cea-49e2-8ebe-84311d039298")
                        },
                        new
                        {
                            LineId = new Guid("23626604-af65-43a0-a8c7-1997672cd597"),
                            CharacterId = new Guid("055d8f22-74b9-48a3-93b4-20e3342033ed"),
                            LineContent = "No, I would better finish this. Go have some fun.",
                            StoryId = new Guid("23a5d12c-3cea-49e2-8ebe-84311d039298")
                        },
                        new
                        {
                            LineId = new Guid("60254cc1-08ab-443f-a660-507c56a8dfe5"),
                            CharacterId = new Guid("14a9f638-5eff-49d2-8113-9b27bd924c48"),
                            LineContent = "Look, it is Howl's castle!",
                            StoryId = new Guid("23a5d12c-3cea-49e2-8ebe-84311d039298")
                        },
                        new
                        {
                            LineId = new Guid("f0b15a82-7cd5-4e27-b0fb-b0289ec11c59"),
                            CharacterId = new Guid("374de42d-a6d4-4480-b912-29c761f8564f"),
                            LineContent = "Never seen it so close before!",
                            StoryId = new Guid("23a5d12c-3cea-49e2-8ebe-84311d039298")
                        },
                        new
                        {
                            LineId = new Guid("cae12067-27bb-4887-b9a3-0f79a2bc4be8"),
                            CharacterId = new Guid("14a9f638-5eff-49d2-8113-9b27bd924c48"),
                            LineContent = "Oh, my... I wonder if Howl is in town.",
                            StoryId = new Guid("23a5d12c-3cea-49e2-8ebe-84311d039298")
                        },
                        new
                        {
                            LineId = new Guid("712d83b8-98c8-4e8d-a7d5-10a84359c706"),
                            CharacterId = new Guid("0e4a9b40-096e-4257-bc7c-81a44ff07237"),
                            LineContent = "Oh, it is gone!",
                            StoryId = new Guid("23a5d12c-3cea-49e2-8ebe-84311d039298")
                        },
                        new
                        {
                            LineId = new Guid("936f5613-6aad-4e58-b9d5-7881073a3754"),
                            CharacterId = new Guid("14a9f638-5eff-49d2-8113-9b27bd924c48"),
                            LineContent = "No, he is just hiding in the fog from all of those planes.",
                            StoryId = new Guid("23a5d12c-3cea-49e2-8ebe-84311d039298")
                        },
                        new
                        {
                            LineId = new Guid("ab65d99b-fe7f-44e7-8a94-36ac1174ba5e"),
                            CharacterId = new Guid("374de42d-a6d4-4480-b912-29c761f8564f"),
                            LineContent = "Remember Martha, from South Heaven? They say Howl tore her heart out.",
                            StoryId = new Guid("23a5d12c-3cea-49e2-8ebe-84311d039298")
                        },
                        new
                        {
                            LineId = new Guid("9075ad2f-b447-4080-9f3b-d0891a34e3cd"),
                            CharacterId = new Guid("0e4a9b40-096e-4257-bc7c-81a44ff07237"),
                            LineContent = "Remember Martha, from South Heaven? They say Howl tore her heart out.",
                            StoryId = new Guid("23a5d12c-3cea-49e2-8ebe-84311d039298")
                        },
                        new
                        {
                            LineId = new Guid("ef182f17-4404-4b16-8606-4a691245b3fa"),
                            CharacterId = new Guid("374de42d-a6d4-4480-b912-29c761f8564f"),
                            LineContent = "Now I am scared to go out!",
                            StoryId = new Guid("23a5d12c-3cea-49e2-8ebe-84311d039298")
                        },
                        new
                        {
                            LineId = new Guid("ea854290-c158-4ade-bc16-3dc6378586e4"),
                            CharacterId = new Guid("14a9f638-5eff-49d2-8113-9b27bd924c48"),
                            LineContent = "Don't worry, he only prays on pretty girls!",
                            StoryId = new Guid("23a5d12c-3cea-49e2-8ebe-84311d039298")
                        },
                        new
                        {
                            LineId = new Guid("8d0b726d-9b8d-4def-9fcc-119e1f0c2271"),
                            CharacterId = new Guid("f5447d23-7618-4d4a-9e65-0918c776c380"),
                            LineContent = "Come on, girls! Hurry up!",
                            StoryId = new Guid("23a5d12c-3cea-49e2-8ebe-84311d039298")
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.LineNumber", b =>
                {
                    b.Property<Guid>("LineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("LineId");

                    b.ToTable("LineNumber");

                    b.HasData(
                        new
                        {
                            LineId = new Guid("27c253d0-05d0-4daf-9273-55e80f151aa0"),
                            Number = 1
                        },
                        new
                        {
                            LineId = new Guid("23626604-af65-43a0-a8c7-1997672cd597"),
                            Number = 2
                        },
                        new
                        {
                            LineId = new Guid("60254cc1-08ab-443f-a660-507c56a8dfe5"),
                            Number = 3
                        },
                        new
                        {
                            LineId = new Guid("f0b15a82-7cd5-4e27-b0fb-b0289ec11c59"),
                            Number = 4
                        },
                        new
                        {
                            LineId = new Guid("cae12067-27bb-4887-b9a3-0f79a2bc4be8"),
                            Number = 5
                        },
                        new
                        {
                            LineId = new Guid("712d83b8-98c8-4e8d-a7d5-10a84359c706"),
                            Number = 6
                        },
                        new
                        {
                            LineId = new Guid("936f5613-6aad-4e58-b9d5-7881073a3754"),
                            Number = 7
                        },
                        new
                        {
                            LineId = new Guid("ab65d99b-fe7f-44e7-8a94-36ac1174ba5e"),
                            Number = 8
                        },
                        new
                        {
                            LineId = new Guid("9075ad2f-b447-4080-9f3b-d0891a34e3cd"),
                            Number = 9
                        },
                        new
                        {
                            LineId = new Guid("ef182f17-4404-4b16-8606-4a691245b3fa"),
                            Number = 10
                        },
                        new
                        {
                            LineId = new Guid("ea854290-c158-4ade-bc16-3dc6378586e4"),
                            Number = 11
                        },
                        new
                        {
                            LineId = new Guid("8d0b726d-9b8d-4def-9fcc-119e1f0c2271"),
                            Number = 12
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.Story", b =>
                {
                    b.Property<Guid>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoryCoverImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StorySetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StoryId");

                    b.HasIndex("StorySetId");

                    b.ToTable("Story");

                    b.HasData(
                        new
                        {
                            StoryId = new Guid("23a5d12c-3cea-49e2-8ebe-84311d039298"),
                            StoryCoverImage = "/images/StoriesData/MovingCastleOpeningStory/HowlsMovingCastleCover.jfif",
                            StoryName = "Opening Story of Howl's Moving Castle",
                            StorySetId = new Guid("b565f90a-5183-46cf-bc4f-961290b13fed")
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.StorySet", b =>
                {
                    b.Property<Guid>("StorySetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorySetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StorySetId");

                    b.ToTable("StorySet");

                    b.HasData(
                        new
                        {
                            StorySetId = new Guid("b565f90a-5183-46cf-bc4f-961290b13fed"),
                            StorySetName = "Set One"
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.StorySetNumber", b =>
                {
                    b.Property<Guid>("StorySetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SetNumber")
                        .HasColumnType("int");

                    b.HasKey("StorySetId");

                    b.ToTable("StorySetNumber");

                    b.HasData(
                        new
                        {
                            StorySetId = new Guid("b565f90a-5183-46cf-bc4f-961290b13fed"),
                            SetNumber = 1
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.DictionaryWord", b =>
                {
                    b.HasOne("TalesApp.Domain.Line", "Line")
                        .WithMany("DictionaryWords")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.Line", b =>
                {
                    b.HasOne("TalesApp.Domain.Character", "Character")
                        .WithMany("Lines")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TalesApp.Domain.Story", "Story")
                        .WithMany("Lines")
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.LineNumber", b =>
                {
                    b.HasOne("TalesApp.Domain.Line", "Line")
                        .WithOne("LineNumber")
                        .HasForeignKey("TalesApp.Domain.LineNumber", "LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.Story", b =>
                {
                    b.HasOne("TalesApp.Domain.StorySet", "StorySet")
                        .WithMany("Stories")
                        .HasForeignKey("StorySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.StorySetNumber", b =>
                {
                    b.HasOne("TalesApp.Domain.StorySet", "StorySet")
                        .WithOne("StorySetNumber")
                        .HasForeignKey("TalesApp.Domain.StorySetNumber", "StorySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
