// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TalesApp.Data;

namespace TalesApp.Data.Migrations
{
    [DbContext(typeof(TalesContext))]
    partial class TalesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TalesApp.Domain.Character", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CharacterAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            CharacterId = new Guid("8e7c45ab-6805-4c27-bb42-4be6548bdaf0"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/FannyHatter.jpg",
                            CharacterName = "Fanny"
                        },
                        new
                        {
                            CharacterId = new Guid("a247f0d7-c23f-41e7-b66d-628dfd0d06ee"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/Sophie.jfif",
                            CharacterName = "Sophie"
                        },
                        new
                        {
                            CharacterId = new Guid("b4162d1f-52e8-4872-b9dc-dc6a6fcfdf40"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/SophiesSister1.jfif",
                            CharacterName = "Sophie's sister"
                        },
                        new
                        {
                            CharacterId = new Guid("107c0d9f-1c8d-4832-b25f-737779b4c604"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/SophiesSister2.jfif",
                            CharacterName = "Sophie's sister"
                        },
                        new
                        {
                            CharacterId = new Guid("4274eaf5-de9a-4fbc-a6fd-e59f3f8158b8"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/LettieHatter.png",
                            CharacterName = "Sophie's sister"
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.DictionaryWord", b =>
                {
                    b.Property<Guid>("DictionaryWordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DictionaryWordText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WordAddedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("DictionaryWordId");

                    b.HasIndex("LineId");

                    b.ToTable("DictionaryWords");
                });

            modelBuilder.Entity("TalesApp.Domain.Line", b =>
                {
                    b.Property<Guid>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LineContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LineId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StoryId");

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            LineId = new Guid("b69fdb5a-19ed-4be0-a160-1d7970fe6b70"),
                            CharacterId = new Guid("8e7c45ab-6805-4c27-bb42-4be6548bdaf0"),
                            LineContent = "Sophie, we have just closed the shop. You have done enough work, why won't you come out with us this time?",
                            StoryId = new Guid("170d55ca-9254-48e9-8535-e463dde768a5")
                        },
                        new
                        {
                            LineId = new Guid("2ce0f84b-bf87-4c29-92ac-1b68cbbf66ba"),
                            CharacterId = new Guid("a247f0d7-c23f-41e7-b66d-628dfd0d06ee"),
                            LineContent = "No, I would better finish this. Go have some fun.",
                            StoryId = new Guid("170d55ca-9254-48e9-8535-e463dde768a5")
                        },
                        new
                        {
                            LineId = new Guid("94507b55-2690-439a-bcf0-a1d0aac881f5"),
                            CharacterId = new Guid("b4162d1f-52e8-4872-b9dc-dc6a6fcfdf40"),
                            LineContent = "Look, it is Howl's castle!",
                            StoryId = new Guid("170d55ca-9254-48e9-8535-e463dde768a5")
                        },
                        new
                        {
                            LineId = new Guid("ed9f81ef-8ac5-4a6c-babe-a254303059a4"),
                            CharacterId = new Guid("107c0d9f-1c8d-4832-b25f-737779b4c604"),
                            LineContent = "Never seen it so close before!",
                            StoryId = new Guid("170d55ca-9254-48e9-8535-e463dde768a5")
                        },
                        new
                        {
                            LineId = new Guid("d726c01c-c4a1-46a0-a92d-a3e097cecfa4"),
                            CharacterId = new Guid("b4162d1f-52e8-4872-b9dc-dc6a6fcfdf40"),
                            LineContent = "Oh, my... I wonder if Howl is in town.",
                            StoryId = new Guid("170d55ca-9254-48e9-8535-e463dde768a5")
                        },
                        new
                        {
                            LineId = new Guid("ae500c1f-e734-423d-a0fa-d862f7ff69b3"),
                            CharacterId = new Guid("4274eaf5-de9a-4fbc-a6fd-e59f3f8158b8"),
                            LineContent = "Oh, it is gone!",
                            StoryId = new Guid("170d55ca-9254-48e9-8535-e463dde768a5")
                        },
                        new
                        {
                            LineId = new Guid("167a92c5-7f34-4be1-b6c8-ee396c7ae122"),
                            CharacterId = new Guid("b4162d1f-52e8-4872-b9dc-dc6a6fcfdf40"),
                            LineContent = "No, he is just hiding in the fog from all of those planes.",
                            StoryId = new Guid("170d55ca-9254-48e9-8535-e463dde768a5")
                        },
                        new
                        {
                            LineId = new Guid("d5502289-46d5-4eea-aebf-7f5ef2bc64d8"),
                            CharacterId = new Guid("107c0d9f-1c8d-4832-b25f-737779b4c604"),
                            LineContent = "Remember Martha, from South Heaven? They say Howl tore her heart out.",
                            StoryId = new Guid("170d55ca-9254-48e9-8535-e463dde768a5")
                        },
                        new
                        {
                            LineId = new Guid("4450397c-ebfa-4e40-98e9-83a88337bc27"),
                            CharacterId = new Guid("4274eaf5-de9a-4fbc-a6fd-e59f3f8158b8"),
                            LineContent = "Remember Martha, from South Heaven? They say Howl tore her heart out.",
                            StoryId = new Guid("170d55ca-9254-48e9-8535-e463dde768a5")
                        },
                        new
                        {
                            LineId = new Guid("f8bc27ca-f5d4-41e1-8a11-8ebb228654b6"),
                            CharacterId = new Guid("107c0d9f-1c8d-4832-b25f-737779b4c604"),
                            LineContent = "Now I am scared to go out!",
                            StoryId = new Guid("170d55ca-9254-48e9-8535-e463dde768a5")
                        },
                        new
                        {
                            LineId = new Guid("6a23b4f0-6524-410d-8466-c8b9f0a4676c"),
                            CharacterId = new Guid("b4162d1f-52e8-4872-b9dc-dc6a6fcfdf40"),
                            LineContent = "Don't worry, he only prays on pretty girls!",
                            StoryId = new Guid("170d55ca-9254-48e9-8535-e463dde768a5")
                        },
                        new
                        {
                            LineId = new Guid("863ee926-37ff-4ab8-97dd-94d14883f85b"),
                            CharacterId = new Guid("8e7c45ab-6805-4c27-bb42-4be6548bdaf0"),
                            LineContent = "Come on, girls! Hurry up!",
                            StoryId = new Guid("170d55ca-9254-48e9-8535-e463dde768a5")
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.LineSequence", b =>
                {
                    b.Property<Guid>("LineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.HasKey("LineId");

                    b.ToTable("LineSequences");

                    b.HasData(
                        new
                        {
                            LineId = new Guid("b69fdb5a-19ed-4be0-a160-1d7970fe6b70"),
                            SequenceNumber = 1
                        },
                        new
                        {
                            LineId = new Guid("2ce0f84b-bf87-4c29-92ac-1b68cbbf66ba"),
                            SequenceNumber = 2
                        },
                        new
                        {
                            LineId = new Guid("94507b55-2690-439a-bcf0-a1d0aac881f5"),
                            SequenceNumber = 3
                        },
                        new
                        {
                            LineId = new Guid("ed9f81ef-8ac5-4a6c-babe-a254303059a4"),
                            SequenceNumber = 4
                        },
                        new
                        {
                            LineId = new Guid("d726c01c-c4a1-46a0-a92d-a3e097cecfa4"),
                            SequenceNumber = 5
                        },
                        new
                        {
                            LineId = new Guid("ae500c1f-e734-423d-a0fa-d862f7ff69b3"),
                            SequenceNumber = 6
                        },
                        new
                        {
                            LineId = new Guid("167a92c5-7f34-4be1-b6c8-ee396c7ae122"),
                            SequenceNumber = 7
                        },
                        new
                        {
                            LineId = new Guid("d5502289-46d5-4eea-aebf-7f5ef2bc64d8"),
                            SequenceNumber = 8
                        },
                        new
                        {
                            LineId = new Guid("4450397c-ebfa-4e40-98e9-83a88337bc27"),
                            SequenceNumber = 9
                        },
                        new
                        {
                            LineId = new Guid("f8bc27ca-f5d4-41e1-8a11-8ebb228654b6"),
                            SequenceNumber = 10
                        },
                        new
                        {
                            LineId = new Guid("6a23b4f0-6524-410d-8466-c8b9f0a4676c"),
                            SequenceNumber = 11
                        },
                        new
                        {
                            LineId = new Guid("863ee926-37ff-4ab8-97dd-94d14883f85b"),
                            SequenceNumber = 12
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.Story", b =>
                {
                    b.Property<Guid>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoryCoverImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StorySetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StoryId");

                    b.HasIndex("StorySetId");

                    b.ToTable("Stories");

                    b.HasData(
                        new
                        {
                            StoryId = new Guid("170d55ca-9254-48e9-8535-e463dde768a5"),
                            StoryCoverImage = "/images/StoriesData/MovingCastleOpeningStory/HowlsMovingCastleCover.jfif",
                            StoryName = "Opening Story of Howl's Moving Castle",
                            StorySetId = new Guid("ac225e0d-ef1e-48c0-9050-5f9eda46d513")
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.StorySet", b =>
                {
                    b.Property<Guid>("StorySetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorySetName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StorySetId");

                    b.ToTable("StorySets");

                    b.HasData(
                        new
                        {
                            StorySetId = new Guid("ac225e0d-ef1e-48c0-9050-5f9eda46d513"),
                            StorySetName = "Set One"
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.StorySetsSequence", b =>
                {
                    b.Property<Guid>("StorySetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SetNumber")
                        .HasColumnType("int");

                    b.HasKey("StorySetId");

                    b.ToTable("StorySetsSequences");

                    b.HasData(
                        new
                        {
                            StorySetId = new Guid("ac225e0d-ef1e-48c0-9050-5f9eda46d513"),
                            SetNumber = 1
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.DictionaryWord", b =>
                {
                    b.HasOne("TalesApp.Domain.Line", "Line")
                        .WithMany("DictionaryWord")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.Line", b =>
                {
                    b.HasOne("TalesApp.Domain.Character", "Character")
                        .WithMany("Lines")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TalesApp.Domain.Story", "Story")
                        .WithMany("Lines")
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.LineSequence", b =>
                {
                    b.HasOne("TalesApp.Domain.Line", "Line")
                        .WithOne("LineSequence")
                        .HasForeignKey("TalesApp.Domain.LineSequence", "LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.Story", b =>
                {
                    b.HasOne("TalesApp.Domain.StorySet", "StorySet")
                        .WithMany("Stories")
                        .HasForeignKey("StorySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.StorySetsSequence", b =>
                {
                    b.HasOne("TalesApp.Domain.StorySet", "StorySet")
                        .WithOne("StorySetsSequence")
                        .HasForeignKey("TalesApp.Domain.StorySetsSequence", "StorySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
