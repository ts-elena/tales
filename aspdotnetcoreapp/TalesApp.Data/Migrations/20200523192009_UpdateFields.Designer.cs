// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TalesApp.Data;

namespace TalesApp.Data.Migrations
{
    [DbContext(typeof(TalesContext))]
    [Migration("20200523192009_UpdateFields")]
    partial class UpdateFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TalesApp.Domain.Character", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CharacterAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacterId");

                    b.ToTable("Character");

                    b.HasData(
                        new
                        {
                            CharacterId = new Guid("f9043c0b-0457-4648-bd34-3f373369ba86"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/FannyHatter.jpg",
                            CharacterName = "Fanny"
                        },
                        new
                        {
                            CharacterId = new Guid("f5753b26-be64-4efa-83ea-5e84e51441c1"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/Sophie.jfif",
                            CharacterName = "Sophie"
                        },
                        new
                        {
                            CharacterId = new Guid("d803563f-d59e-48db-92cf-b6088aa9eff0"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/SophiesSister1.jfif",
                            CharacterName = "Sophie's sister"
                        },
                        new
                        {
                            CharacterId = new Guid("a1452de9-680e-436c-835b-adf1647b6bc0"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/SophiesSister2.jfif",
                            CharacterName = "Sophie's sister"
                        },
                        new
                        {
                            CharacterId = new Guid("8479d28a-1147-419c-8157-45f359883490"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/LettieHatter.png",
                            CharacterName = "Sophie's sister"
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.DictionaryWord", b =>
                {
                    b.Property<Guid>("DictionaryWordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DictionaryWordText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WordAddedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("DictionaryWordId");

                    b.HasIndex("LineId");

                    b.ToTable("DictionaryWord");
                });

            modelBuilder.Entity("TalesApp.Domain.Line", b =>
                {
                    b.Property<Guid>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LineContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LineId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StoryId");

                    b.ToTable("Line");

                    b.HasData(
                        new
                        {
                            LineId = new Guid("1c19c998-a28b-4cde-ba96-cb9bc3cd718d"),
                            CharacterId = new Guid("f9043c0b-0457-4648-bd34-3f373369ba86"),
                            LineContent = "Sophie, we have just closed the shop. You have done enough work, why won't you come out with us this time?",
                            StoryId = new Guid("be84da75-fc6e-43a2-a7e2-655b9f86fcd8")
                        },
                        new
                        {
                            LineId = new Guid("e3c6a231-8e62-49de-9131-2957cbcd5fd6"),
                            CharacterId = new Guid("f5753b26-be64-4efa-83ea-5e84e51441c1"),
                            LineContent = "No, I would better finish this. Go have some fun.",
                            StoryId = new Guid("be84da75-fc6e-43a2-a7e2-655b9f86fcd8")
                        },
                        new
                        {
                            LineId = new Guid("445cbed2-c472-4d84-9c06-90ec861a651f"),
                            CharacterId = new Guid("d803563f-d59e-48db-92cf-b6088aa9eff0"),
                            LineContent = "Look, it is Howl's castle!",
                            StoryId = new Guid("be84da75-fc6e-43a2-a7e2-655b9f86fcd8")
                        },
                        new
                        {
                            LineId = new Guid("66b284e4-a272-42fa-a8c9-8e7b0af9c646"),
                            CharacterId = new Guid("a1452de9-680e-436c-835b-adf1647b6bc0"),
                            LineContent = "Never seen it so close before!",
                            StoryId = new Guid("be84da75-fc6e-43a2-a7e2-655b9f86fcd8")
                        },
                        new
                        {
                            LineId = new Guid("c33e5c69-3503-487b-803e-f7ed60cc74b1"),
                            CharacterId = new Guid("d803563f-d59e-48db-92cf-b6088aa9eff0"),
                            LineContent = "Oh, my... I wonder if Howl is in town.",
                            StoryId = new Guid("be84da75-fc6e-43a2-a7e2-655b9f86fcd8")
                        },
                        new
                        {
                            LineId = new Guid("d8b23816-17eb-4825-ad44-99c566b1593c"),
                            CharacterId = new Guid("8479d28a-1147-419c-8157-45f359883490"),
                            LineContent = "Oh, it is gone!",
                            StoryId = new Guid("be84da75-fc6e-43a2-a7e2-655b9f86fcd8")
                        },
                        new
                        {
                            LineId = new Guid("849a68b1-7c1d-484e-9ccc-a672bdedc0c5"),
                            CharacterId = new Guid("d803563f-d59e-48db-92cf-b6088aa9eff0"),
                            LineContent = "No, he is just hiding in the fog from all of those planes.",
                            StoryId = new Guid("be84da75-fc6e-43a2-a7e2-655b9f86fcd8")
                        },
                        new
                        {
                            LineId = new Guid("c94bed16-4263-4a8f-b57c-3fa91d04f0e3"),
                            CharacterId = new Guid("a1452de9-680e-436c-835b-adf1647b6bc0"),
                            LineContent = "Remember Martha, from South Heaven? They say Howl tore her heart out.",
                            StoryId = new Guid("be84da75-fc6e-43a2-a7e2-655b9f86fcd8")
                        },
                        new
                        {
                            LineId = new Guid("a80c2892-073c-4c8b-af39-ea41de6bd1ab"),
                            CharacterId = new Guid("8479d28a-1147-419c-8157-45f359883490"),
                            LineContent = "Remember Martha, from South Heaven? They say Howl tore her heart out.",
                            StoryId = new Guid("be84da75-fc6e-43a2-a7e2-655b9f86fcd8")
                        },
                        new
                        {
                            LineId = new Guid("6fb2e385-fc52-4756-8559-cfa21197b108"),
                            CharacterId = new Guid("a1452de9-680e-436c-835b-adf1647b6bc0"),
                            LineContent = "Now I am scared to go out!",
                            StoryId = new Guid("be84da75-fc6e-43a2-a7e2-655b9f86fcd8")
                        },
                        new
                        {
                            LineId = new Guid("70120b08-8dd1-4a99-ab44-e0025a93dd93"),
                            CharacterId = new Guid("d803563f-d59e-48db-92cf-b6088aa9eff0"),
                            LineContent = "Don't worry, he only prays on pretty girls!",
                            StoryId = new Guid("be84da75-fc6e-43a2-a7e2-655b9f86fcd8")
                        },
                        new
                        {
                            LineId = new Guid("725b82ee-87a6-401b-98bb-2ae018ad52a5"),
                            CharacterId = new Guid("f9043c0b-0457-4648-bd34-3f373369ba86"),
                            LineContent = "Come on, girls! Hurry up!",
                            StoryId = new Guid("be84da75-fc6e-43a2-a7e2-655b9f86fcd8")
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.LineNumber", b =>
                {
                    b.Property<Guid>("LineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("LineId");

                    b.ToTable("LineNumber");

                    b.HasData(
                        new
                        {
                            LineId = new Guid("1c19c998-a28b-4cde-ba96-cb9bc3cd718d"),
                            Number = 1
                        },
                        new
                        {
                            LineId = new Guid("e3c6a231-8e62-49de-9131-2957cbcd5fd6"),
                            Number = 2
                        },
                        new
                        {
                            LineId = new Guid("445cbed2-c472-4d84-9c06-90ec861a651f"),
                            Number = 3
                        },
                        new
                        {
                            LineId = new Guid("66b284e4-a272-42fa-a8c9-8e7b0af9c646"),
                            Number = 4
                        },
                        new
                        {
                            LineId = new Guid("c33e5c69-3503-487b-803e-f7ed60cc74b1"),
                            Number = 5
                        },
                        new
                        {
                            LineId = new Guid("d8b23816-17eb-4825-ad44-99c566b1593c"),
                            Number = 6
                        },
                        new
                        {
                            LineId = new Guid("849a68b1-7c1d-484e-9ccc-a672bdedc0c5"),
                            Number = 7
                        },
                        new
                        {
                            LineId = new Guid("c94bed16-4263-4a8f-b57c-3fa91d04f0e3"),
                            Number = 8
                        },
                        new
                        {
                            LineId = new Guid("a80c2892-073c-4c8b-af39-ea41de6bd1ab"),
                            Number = 9
                        },
                        new
                        {
                            LineId = new Guid("6fb2e385-fc52-4756-8559-cfa21197b108"),
                            Number = 10
                        },
                        new
                        {
                            LineId = new Guid("70120b08-8dd1-4a99-ab44-e0025a93dd93"),
                            Number = 11
                        },
                        new
                        {
                            LineId = new Guid("725b82ee-87a6-401b-98bb-2ae018ad52a5"),
                            Number = 12
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.Story", b =>
                {
                    b.Property<Guid>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoryCoverImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StorySetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StoryId");

                    b.HasIndex("StorySetId");

                    b.ToTable("Story");

                    b.HasData(
                        new
                        {
                            StoryId = new Guid("be84da75-fc6e-43a2-a7e2-655b9f86fcd8"),
                            StoryCoverImage = "/images/StoriesData/MovingCastleOpeningStory/HowlsMovingCastleCover.jfif",
                            StoryName = "Opening Story of Howl's Moving Castle",
                            StorySetId = new Guid("7991b278-958e-40eb-ace9-9a337a350934")
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.StorySet", b =>
                {
                    b.Property<Guid>("StorySetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorySetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StorySetId");

                    b.ToTable("StorySet");

                    b.HasData(
                        new
                        {
                            StorySetId = new Guid("7991b278-958e-40eb-ace9-9a337a350934"),
                            StorySetName = "Set One"
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.StorySetNumber", b =>
                {
                    b.Property<Guid>("StorySetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SetNumber")
                        .HasColumnType("int");

                    b.HasKey("StorySetId");

                    b.ToTable("StorySetNumber");

                    b.HasData(
                        new
                        {
                            StorySetId = new Guid("7991b278-958e-40eb-ace9-9a337a350934"),
                            SetNumber = 1
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.DictionaryWord", b =>
                {
                    b.HasOne("TalesApp.Domain.Line", "Line")
                        .WithMany("DictionaryWords")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.Line", b =>
                {
                    b.HasOne("TalesApp.Domain.Character", "Character")
                        .WithMany("Lines")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TalesApp.Domain.Story", "Story")
                        .WithMany("Lines")
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.LineNumber", b =>
                {
                    b.HasOne("TalesApp.Domain.Line", "Line")
                        .WithOne("LineNumber")
                        .HasForeignKey("TalesApp.Domain.LineNumber", "LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.Story", b =>
                {
                    b.HasOne("TalesApp.Domain.StorySet", "StorySet")
                        .WithMany("Stories")
                        .HasForeignKey("StorySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.StorySetNumber", b =>
                {
                    b.HasOne("TalesApp.Domain.StorySet", "StorySet")
                        .WithOne("StorySetNumber")
                        .HasForeignKey("TalesApp.Domain.StorySetNumber", "StorySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
