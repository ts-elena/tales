// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TalesApp.Data;

namespace TalesApp.Data.Migrations
{
    [DbContext(typeof(TalesContext))]
    [Migration("20200510151346_AddData")]
    partial class AddData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TalesApp.Domain.Character", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CharacterAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            CharacterId = new Guid("34efd913-db35-4dfb-8330-99ed162b5e62"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/FannyHatter.jpg",
                            CharacterName = "Fanny"
                        },
                        new
                        {
                            CharacterId = new Guid("c43be0f3-322d-42e3-b0c2-1361b9905537"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/Sophie.jfif",
                            CharacterName = "Sophie"
                        },
                        new
                        {
                            CharacterId = new Guid("6e1cc3a9-12b8-49d5-b1e5-d77d56ee3ce3"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/SophiesSister1.jfif",
                            CharacterName = "Sophie's sister"
                        },
                        new
                        {
                            CharacterId = new Guid("3b28f948-2d2a-4661-8675-65ad58485094"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/SophiesSister2.jfif",
                            CharacterName = "Sophie's sister"
                        },
                        new
                        {
                            CharacterId = new Guid("df6dc5c2-8f6b-4d68-b2cb-12e9b721a221"),
                            CharacterAvatar = "/images/StoriesData/MovingCastleOpeningStory/Avatars/LettieHatter.png",
                            CharacterName = "Sophie's sister"
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.DictionaryWord", b =>
                {
                    b.Property<Guid>("DictionaryWordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DictionaryWordText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WordAddedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("DictionaryWordId");

                    b.HasIndex("LineId");

                    b.ToTable("DictionaryWords");
                });

            modelBuilder.Entity("TalesApp.Domain.Line", b =>
                {
                    b.Property<Guid>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LineContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LineId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StoryId");

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            LineId = new Guid("49aad5e6-107f-4512-a58a-97bb29c08bf1"),
                            CharacterId = new Guid("34efd913-db35-4dfb-8330-99ed162b5e62"),
                            LineContent = "Sophie, we have just closed the shop. You have done enough work, why won't you come out with us this time?",
                            StoryId = new Guid("19277692-d769-467f-9ecb-295ccb56dcbb")
                        },
                        new
                        {
                            LineId = new Guid("86d2f2ca-8d7f-4ba6-a0f5-5ed06dbebb86"),
                            CharacterId = new Guid("c43be0f3-322d-42e3-b0c2-1361b9905537"),
                            LineContent = "No, I would better finish this. Go have some fun.",
                            StoryId = new Guid("19277692-d769-467f-9ecb-295ccb56dcbb")
                        },
                        new
                        {
                            LineId = new Guid("5c3a2fd8-00cf-4799-99fb-ad65e579896e"),
                            CharacterId = new Guid("6e1cc3a9-12b8-49d5-b1e5-d77d56ee3ce3"),
                            LineContent = "Look, it is Howl's castle!",
                            StoryId = new Guid("19277692-d769-467f-9ecb-295ccb56dcbb")
                        },
                        new
                        {
                            LineId = new Guid("40fbf41c-8919-4c65-962d-9287dc691f4d"),
                            CharacterId = new Guid("3b28f948-2d2a-4661-8675-65ad58485094"),
                            LineContent = "Never seen it so close before!",
                            StoryId = new Guid("19277692-d769-467f-9ecb-295ccb56dcbb")
                        },
                        new
                        {
                            LineId = new Guid("8a786f26-8c2d-4aff-b5a7-659c7741ef5d"),
                            CharacterId = new Guid("6e1cc3a9-12b8-49d5-b1e5-d77d56ee3ce3"),
                            LineContent = "Oh, my... I wonder if Howl is in town.",
                            StoryId = new Guid("19277692-d769-467f-9ecb-295ccb56dcbb")
                        },
                        new
                        {
                            LineId = new Guid("a8a3a9c5-b483-4948-80d6-9ece2dfaccaa"),
                            CharacterId = new Guid("df6dc5c2-8f6b-4d68-b2cb-12e9b721a221"),
                            LineContent = "Oh, it is gone!",
                            StoryId = new Guid("19277692-d769-467f-9ecb-295ccb56dcbb")
                        },
                        new
                        {
                            LineId = new Guid("7589de9f-6561-428e-8bbe-b80f08294146"),
                            CharacterId = new Guid("6e1cc3a9-12b8-49d5-b1e5-d77d56ee3ce3"),
                            LineContent = "No, he is just hiding in the fog from all of those planes.",
                            StoryId = new Guid("19277692-d769-467f-9ecb-295ccb56dcbb")
                        },
                        new
                        {
                            LineId = new Guid("fbc109e8-4bbd-45f7-ad93-858a57445b4e"),
                            CharacterId = new Guid("3b28f948-2d2a-4661-8675-65ad58485094"),
                            LineContent = "Remember Martha, from South Heaven? They say Howl tore her heart out.",
                            StoryId = new Guid("19277692-d769-467f-9ecb-295ccb56dcbb")
                        },
                        new
                        {
                            LineId = new Guid("76f7f7b6-cadd-44c3-a05b-200459308560"),
                            CharacterId = new Guid("df6dc5c2-8f6b-4d68-b2cb-12e9b721a221"),
                            LineContent = "Remember Martha, from South Heaven? They say Howl tore her heart out.",
                            StoryId = new Guid("19277692-d769-467f-9ecb-295ccb56dcbb")
                        },
                        new
                        {
                            LineId = new Guid("b47d2b97-a606-44bf-9606-2fc11b3777cd"),
                            CharacterId = new Guid("3b28f948-2d2a-4661-8675-65ad58485094"),
                            LineContent = "Now I am scared to go out!",
                            StoryId = new Guid("19277692-d769-467f-9ecb-295ccb56dcbb")
                        },
                        new
                        {
                            LineId = new Guid("8b6a5eb8-3911-4a5f-9222-78efb082d0c0"),
                            CharacterId = new Guid("6e1cc3a9-12b8-49d5-b1e5-d77d56ee3ce3"),
                            LineContent = "Don't worry, he only prays on pretty girls!",
                            StoryId = new Guid("19277692-d769-467f-9ecb-295ccb56dcbb")
                        },
                        new
                        {
                            LineId = new Guid("55f68e90-3c51-4064-8227-5f0eafee12ed"),
                            CharacterId = new Guid("34efd913-db35-4dfb-8330-99ed162b5e62"),
                            LineContent = "Come on, girls! Hurry up!",
                            StoryId = new Guid("19277692-d769-467f-9ecb-295ccb56dcbb")
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.LineSequence", b =>
                {
                    b.Property<Guid>("LineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.HasKey("LineId");

                    b.ToTable("LineSequences");

                    b.HasData(
                        new
                        {
                            LineId = new Guid("49aad5e6-107f-4512-a58a-97bb29c08bf1"),
                            SequenceNumber = 1
                        },
                        new
                        {
                            LineId = new Guid("86d2f2ca-8d7f-4ba6-a0f5-5ed06dbebb86"),
                            SequenceNumber = 2
                        },
                        new
                        {
                            LineId = new Guid("5c3a2fd8-00cf-4799-99fb-ad65e579896e"),
                            SequenceNumber = 3
                        },
                        new
                        {
                            LineId = new Guid("40fbf41c-8919-4c65-962d-9287dc691f4d"),
                            SequenceNumber = 4
                        },
                        new
                        {
                            LineId = new Guid("8a786f26-8c2d-4aff-b5a7-659c7741ef5d"),
                            SequenceNumber = 5
                        },
                        new
                        {
                            LineId = new Guid("a8a3a9c5-b483-4948-80d6-9ece2dfaccaa"),
                            SequenceNumber = 6
                        },
                        new
                        {
                            LineId = new Guid("7589de9f-6561-428e-8bbe-b80f08294146"),
                            SequenceNumber = 7
                        },
                        new
                        {
                            LineId = new Guid("fbc109e8-4bbd-45f7-ad93-858a57445b4e"),
                            SequenceNumber = 8
                        },
                        new
                        {
                            LineId = new Guid("76f7f7b6-cadd-44c3-a05b-200459308560"),
                            SequenceNumber = 9
                        },
                        new
                        {
                            LineId = new Guid("b47d2b97-a606-44bf-9606-2fc11b3777cd"),
                            SequenceNumber = 10
                        },
                        new
                        {
                            LineId = new Guid("8b6a5eb8-3911-4a5f-9222-78efb082d0c0"),
                            SequenceNumber = 11
                        },
                        new
                        {
                            LineId = new Guid("55f68e90-3c51-4064-8227-5f0eafee12ed"),
                            SequenceNumber = 12
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.Story", b =>
                {
                    b.Property<Guid>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoryCoverImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StorySetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StoryId");

                    b.HasIndex("StorySetId");

                    b.ToTable("Stories");

                    b.HasData(
                        new
                        {
                            StoryId = new Guid("19277692-d769-467f-9ecb-295ccb56dcbb"),
                            StoryCoverImage = "/images/StoriesData/MovingCastleOpeningStory/HowlsMovingCastleCover.jfif",
                            StoryName = "Opening Story of Howl's Moving Castle",
                            StorySetId = new Guid("5f415608-14bb-45da-aa31-8af5c9bd357a")
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.StorySet", b =>
                {
                    b.Property<Guid>("StorySetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorySetName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StorySetId");

                    b.ToTable("StorySets");

                    b.HasData(
                        new
                        {
                            StorySetId = new Guid("5f415608-14bb-45da-aa31-8af5c9bd357a"),
                            StorySetName = "Set One"
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.StorySetsSequence", b =>
                {
                    b.Property<Guid>("StorySetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SetNumber")
                        .HasColumnType("int");

                    b.HasKey("StorySetId");

                    b.ToTable("StorySetsSequences");

                    b.HasData(
                        new
                        {
                            StorySetId = new Guid("5f415608-14bb-45da-aa31-8af5c9bd357a"),
                            SetNumber = 1
                        });
                });

            modelBuilder.Entity("TalesApp.Domain.DictionaryWord", b =>
                {
                    b.HasOne("TalesApp.Domain.Line", "Line")
                        .WithMany("DictionaryWord")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.Line", b =>
                {
                    b.HasOne("TalesApp.Domain.Character", "Character")
                        .WithMany("Lines")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TalesApp.Domain.Story", "Story")
                        .WithMany("Lines")
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.LineSequence", b =>
                {
                    b.HasOne("TalesApp.Domain.Line", "Line")
                        .WithOne("LineSequence")
                        .HasForeignKey("TalesApp.Domain.LineSequence", "LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.Story", b =>
                {
                    b.HasOne("TalesApp.Domain.StorySet", "StorySet")
                        .WithMany("Stories")
                        .HasForeignKey("StorySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TalesApp.Domain.StorySetsSequence", b =>
                {
                    b.HasOne("TalesApp.Domain.StorySet", "StorySet")
                        .WithOne("StorySetsSequence")
                        .HasForeignKey("TalesApp.Domain.StorySetsSequence", "StorySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
